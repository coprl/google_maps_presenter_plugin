(()=>{var m=(o,e,t)=>new Promise((a,s)=>{var i=r=>{try{l(t.next(r))}catch(h){s(h)}},n=r=>{try{l(t.throw(r))}catch(h){s(h)}},l=r=>r.done?a(r.value):Promise.resolve(r.value).then(i,n);l((t=t.apply(o,e)).next())});var f=/<(\w+)>/gi,d=class{constructor(e){this.address=e}get format(){switch(this.address.country){case"GB":return"<ln1>, <ln2> <city> <postal_code>, UK";default:return"<ln1> <ln2>, <city>, <region> <postal_code>, <country>"}}string(){return this.format.replace(f,(e,t)=>this.address[t]?this.address[t]:"").replace(/\s+,/g,",").replace(/\s\s+/g," ")}};var c=class{constructor(e){this.place=e}get ln1(){return this.place.street_address||[this.place.street_number,this.place.route].compactJoin(" ")}get ln2(){return[this.place.subpremise,this.place.premise].compactJoin(" ")}get city(){return this.place.locality||this.place.postal_town}get region(){return this.place.administrative_area_level_1}get postalCode(){return this.place.postal_code}get country(){return this.place.country}fields(){return{ln1:this.ln1,ln2:this.ln2,city:this.city,region:this.region,postal_code:this.postalCode,country:this.country}}};Array.prototype.compactJoin=function(o=" "){return this.some(Boolean)?this.filter(Boolean).join(o):null};var u=class extends c{get subpremisePremise(){return[this.place.subpremise,this.place.premise].compactJoin(", ")}get streetNumberRoute(){return[this.place.street_number,this.place.route].compactJoin(" ")}get ln1(){return[this.subpremisePremise,this.streetNumberRoute].compactJoin(", ")}get ln2(){return null}get city(){return this.place.postal_town}get region(){return{England:"ENG","Northern Ireland":"NIR",Scotland:"SCT",Wales:"WLS"}[this.place.administrative_area_level_1]}get postalCode(){return[this.place.postal_code_prefix,this.place.postal_code,this.place.postal_code_suffix].compactJoin(" ")}};var y={fields:["address_components","formatted_address","geometry.location","name","place_id"],strictBounds:!1};function _(o){return window.google_maps_presenter_plugin.subdivisions[o]}function g(o=[],e={},t=null){for(let[a,s]of Object.entries(e)){if(s==null||s==null)continue;let i=t?`${t}[${a}]`:a;s&&s.constructor==={}.constructor?g(o,s,i):o.push([i,s])}}var p=class{constructor(e){if(console.debug("	PlacesAutoCompleteField"),typeof window.google=="undefined")throw new Error("no Google Maps JS found");this.element=e,this.input=e.querySelector("input"),this.inputWrapper=e.querySelector(".v-plugin--places-autocomplete--input"),this.resultView=e.querySelector(".v-plugin--places-autocomplete--selected-place"),this.editDialog=document.querySelector(`#${e.dataset.editDialogId}`),document.body.appendChild(this.editDialog),this.actualName=this.input.name,this.input.addEventListener("focus",()=>this.input.removeAttribute("placeholder")),this.input.addEventListener("focus",()=>this.disableAutocomplete()),this.input.addEventListener("keydown",t=>{if(t.key=="Enter")return t.preventDefault(),!1}),this.input.vComponent.prepareSubmit=t=>{this.prepareSubmit(t)},window.addEventListener("message",this.onMessage.bind(this)),this.element.dataset.place&&(this.placeData=JSON.parse(this.element.dataset.place),this.updateResultView(),this.updateDialogFields()),this.loadPlacesAPI().then(()=>{this.options=this.makeOptions(),this.input.setAttribute("placeholder",""),this.autocomplete=new google.maps.places.Autocomplete(this.input,this.options),this.autocomplete.addListener("place_changed",this.onPlaceChanged.bind(this))}).catch(t=>{console.error("Failed to initialize Google Places API:",t),this.element.classList.add("mdc-text-field--disabled")})}onMessage(e){if(typeof e.data!="object"||!("type"in e.data&&"id"in e.data))return;let t=e.data.type,a=e.data.id;switch(t){case"places_autocomplete_cleared":{document.querySelector(`#${a}`).closest(".v-plugin--places-autocomplete").vPlugin.clear();break}case"places_autocomplete_address_edited":{let s=document.querySelector(`#${a}`).closest(".v-plugin--places-autocomplete").vPlugin;if(!s.editDialog.querySelector("form").reportValidity())return;let i=[];s.editDialog.vComponent.prepareSubmit(i);for(let[n,l]of i)s.placeData[n]=l==""?null:l;s.placeData.formatted_address=new d(s.placeData).string(),s.closeDialog(),s.updateResultView(),s.updateDialogFields();break}case"places_autocomplete_address_dialog_dismissed":{let s=document.querySelector(`#${a}`).closest(".v-plugin--places-autocomplete").vPlugin;s.editDialog.vComponent.reset(),s.closeDialog(),s.onCountryChanged();break}case"places_autocomplete_country_changed":{document.querySelector(`#${a}`).closest(".v-plugin--places-autocomplete").vPlugin.onCountryChanged();break}default:break}}disableAutocomplete(){this.input.setAttribute("name",(Math.random()+1).toString(36).substring(2)),this.input.setAttribute("autocomplete","one-time-code")}loadPlacesAPI(){return m(this,null,function*(){window.google=window.google||{},window.google.maps=window.google.maps||{},!("places"in window.google.maps)&&(window.google.maps.places=yield google.maps.importLibrary("places"),console.debug("Loaded Google Places API"))})}makeOptions(){let e={strictBounds:this.element.dataset.strict=="true"};if(this.element.dataset.bounds){let[t,a]=JSON.parse(this.element.dataset.bounds);e.bounds=new google.maps.LatLngBounds({lat:t,lng:a}),console.debug(`PlacesAutocompleteField: have bounds: (${t}, ${a})`)}return this.element.dataset.types&&(e.types=JSON.parse(this.element.dataset.types)),Object.assign({},y,e)}onPlaceChanged(){let e=this.autocomplete.getPlace();if(!("address_components"in e))return;console.debug("PlacesAutocompleteField: place =",e);let t=e.geometry.location.lat(),a=e.geometry.location.lng();e.geometry.location={lat:t,lng:a};let s=D(e),i=b(s);this.placeData=Object.assign({name:e.name,source:"google_places",source_id:e.place_id,formatted_address:e.formatted_address,latitude:e.geometry.location.lat,longitude:e.geometry.location.lng},i),console.debug("PlacesAutocompleteField: placeData =",this.placeData),this.updateResultView(),this.updateDialogFields(),this.dispatchEvent("place_changed",this.placeData)}clear(){this.placeData=null,this.input.value="",this.updateResultView(),this.editDialog.vComponent.reset(),this.input.focus()}prepareSubmit(e){this.placeData&&(console.debug("PlacesAutocompleteField: payload =",this.placeData),g(e,this.placeData,this.actualName))}onCountryChanged(){let t=this.editDialog.querySelector('[name="country"]').vComponent.value();this.updateRegionOptions(t)}updateResultView(){return m(this,null,function*(){if(!this.placeData){this.inputWrapper.classList.remove("v-hidden"),this.resultView.classList.add("v-hidden");return}let e=this.resultView.querySelector("img"),t=new URL(e.src),{latitude:a,longitude:s}=this.placeData;t.searchParams.set("center",`${a},${s}`),t.searchParams.set("scale",window.devicePixelRatio),t.searchParams.set("markers",`|${a},${s}`),e.src=t.toString();let i=this.resultView.querySelector('[data-for="place-name"]'),n=this.resultView.querySelector('[data-for="place-address"]');i.textContent=this.placeData.name,n.textContent=this.placeData.formatted_address,this.placeData.formatted_address.startsWith(this.placeData.name)?i.classList.add("v-hidden"):i.classList.remove("v-hidden"),this.inputWrapper.classList.add("v-hidden"),this.resultView.classList.remove("v-hidden")})}closeDialog(){this.editDialog.vComponent.closeDialog()}updateDialogFields(){this.setDialogFieldValue("name",this.placeData.name),this.setDialogFieldValue("ln1",this.placeData.ln1),this.setDialogFieldValue("ln2",this.placeData.ln2),this.setDialogFieldValue("city",this.placeData.city),this.updateRegionOptions(this.placeData.country),this.setDialogFieldValue("region",this.placeData.region),this.setDialogFieldValue("postal_code",this.placeData.postal_code),this.setDialogFieldValue("country",this.placeData.country)}updateRegionOptions(e){let t=this.editDialog.querySelector('[name="region"]'),a=_(e);if(!a||a.length<1){t.replaceChildren(),t.required=!1;return}let s=document.createDocumentFragment();for(let[i,n]of Object.entries(a)){let l=document.createElement("option");l.value=i,l.innerText=n,s.append(l)}t.required=!0,t.replaceChildren(s)}setDialogFieldValue(e,t){let a=this.editDialog.querySelector(`[name="${e}"]`).vComponent;a.originalValue=t,t?a.setValue(t):a.clear()}dispatchEvent(e,t){let a=new CustomEvent(e,{bubbles:!0,composed:!0,detail:t});console.debug(`PlacesAutocompleteField: dispatch ${e}`),this.element.dispatchEvent(a)}destroy(){this.editDialog.remove()}};function D(o){return Object.fromEntries(o.address_components.map(e=>{let t=e.types[0],a;switch(t){case"street_number":case"locality":case"postal_code":a=e.long_name;break;default:a=e.short_name;break}return[t,a]}))}function b(o){switch(o.country){case"GB":return new u(o).fields();default:return new c(o).fields()}}window.PlacesAutocompleteField=p;})();
